This is an exemple in french, my native language, I will gladly translate the code and comments if you want to understand
what is going on :) It is a basic implementation of a factory method with french slang as an interface to illustrate what 
is going on.

Contexte :

1. On désire un type d'objet(Constructeur) qui va créer des objects d'un autre type(couleur). Dans le cas présent,
   une pile de taille variable avec les principales notations pertinentes pour indiquer la bonne couleur.
   Le client veut avoir toutes les informations nécessaires rapidement et s'assurer que tout le monde parle
   bien de la même couleur, sans toutefois avoir des notations dont il ne se servira jamais pour la couleur en question.
   La solution doit être flexible et admettre de nouveau systèmes de notations de couleurs. 
2. Les sous-classes du premier créateur d'objets en question doivent implementer des objets différents.
   Chaque nouveau vendeur de couleur pourra spécifier les différentes notations et ainsi rapidement savoir 
   si il a précisement la bonne couleur ou si il a à tout le moins une couleur très similaire.
3. Le client ne devrait pas avoir besoin de connaître le type exact ni le processus de création de l'objet(couleur)
   en question pour pouvoir l'utiliser. Il veut seulement savoir si oui ou non c'est la bonne couleur et veut
   que la notation pour la couleur en question prenne le moins de place possible et quelle soit le plus exacte possible.

Solution : 

1. Définir une classe d'objet constructeurs qui exprimera les propriétés communes de tout les autres créateurs.
2. Définir un objet qui exprimera les propriétés communes de tout les variations des objets de la même famille.
3. Définir une méthode que l'on nommera méthode constructeur chez l'objet constructeur en question, qui aura 
   pour fruit un objet du type voulu avec les spécifications adéquates.
4. Chaque classe de créateur concrète implementera sa propre séquence pour créer l'objet concrêt adéquat. 

Remarques : 

  Le typage des variables en Python n'est pas nécessaire, l'utilisation par le client(main) ne sera pas 
  dépendente des annotations du module typing, mais cela permet de clarifier certaines méthodes.
